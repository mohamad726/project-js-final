import { Router } from '../../Router/Router';
import { GetUser } from '../../api/get-api/get-api';
import { Label } from '../../components/label/label';
import { El } from '../../utils/El/El';
import { Comback } from '../../utils/comback/comback';

export const Login = () => {
  return El({
    element: 'div',
    className: 'w-screen h-screen',
    children: [
      El({
        element: 'div',
        className: 'w-screen h-[56px] flex pl-3 items-center ',
        children: [
          El({
            element: 'img',
            className: 'comback',
            eventListener: [{ event: 'click', callback: Comback }],
            src: '../../../src/assets/img/VectorBack.svg',
          }),
        ],
      }),
      El({
        element: 'div',
        className: 'flex justify-center items-center w-secreen h-[270px]',
        children: [
          El({
            element: 'img',
            src: '../../../src/assets/img/Vector logo.svg',
          }),
        ],
      }),
      El({
        element: 'div',
        className: 'text-center text-[32px] font-semibold ',
        children: [
          El({
            element: 'h3',
            className: '',
            innerText: 'Login to Your Account',
          }),
        ],
      }),
      El({
        element: 'from',
        className:
          'w-screen flex flex-col h-[350px] justify-around	 items-center',
        children: [
          El({
            element: 'div',
            className: 'flex flex-col gap-7 w-screen items-center ',
            children: [
              El({
                element: 'div',
                className:
                  'rounded-md bg-gray-100 p-2 w-[90%] flex justify-between',
                children: [
                  El({
                    element: 'div',
                    className: 'flex justify-center items-center',
                    children: [
                      El({
                        element: 'div',
                        className: 'p-1 ',
                        innerHTML: `<svg width="14" height="15" viewBox="0 0 14 15" fill="none" class='iconEmailInput' xmlns="http://www.w3.org/2000/svg">
<path   class='iconpath' fill-rule="evenodd" clip-rule="evenodd" d="M0.04375 3.61063C0.131966 3.22409 0.348823 2.87896 0.658806 2.63177C0.968789 2.38458 1.35352 2.24997 1.75 2.25H12.25C12.6465 2.24997 13.0312 2.38458 13.3412 2.63177C13.6512 2.87896 13.868 3.22409 13.9563 3.61063L7 7.86225L0.04375 3.61063ZM0 4.60987V10.8259L5.07762 7.71263L0 4.60987ZM5.91587 8.22625L0.167125 11.7499C0.309161 12.0494 0.533336 12.3024 0.813559 12.4794C1.09378 12.6565 1.41853 12.7503 1.75 12.75H12.25C12.5814 12.7501 12.906 12.656 13.1861 12.4788C13.4662 12.3016 13.6902 12.0485 13.832 11.749L8.08325 8.22538L7 8.88775L5.91587 8.22538V8.22625ZM8.92237 7.7135L14 10.8259V4.60987L8.92237 7.71263V7.7135Z" fill="#6C757D"  />
</svg>`,
                      }),
                    ],
                  }),
                  El({
                    element: 'input',
                    id: 'inputEmail',
                    type: 'email',
                    className: 'bg-gray-100 w-full inputEmail font-[500] ',
                    placeholder: 'Email',
                    eventListener: [{ event: 'input', callback: inputEmail }],
                  }),
                ],
              }),
              El({
                element: 'div',
                className:
                  'rounded-md bg-gray-100 p-2 w-[90%] flex justify-between',
                children: [
                  El({
                    element: 'div',
                    className: 'flex justify-center items-center',
                    children: [
                      El({
                        element: 'div',
                        className: '',
                        innerHTML: `<svg width="16" height="17" class="iconLock" viewBox="0 0 16 17" fill="#7e7c7c" xmlns="http://www.w3.org/2000/svg">
                        <rect width="16" height="16" transform="translate(0 0.5)"  fill-opacity="0.01"/>
                        <g clip-path="url(#clip0_14_9791)">
                        <path d="M3.1875 9.375C3.1875 8.91087 3.37187 8.46575 3.70006 8.13756C4.02825 7.80937 4.47337 7.625 4.9375 7.625H11.0625C11.5266 7.625 11.9717 7.80937 12.2999 8.13756C12.6281 8.46575 12.8125 8.91087 12.8125 9.375V13.75C12.8125 14.2141 12.6281 14.6592 12.2999 14.9874C11.9717 15.3156 11.5266 15.5 11.0625 15.5H4.9375C4.47337 15.5 4.02825 15.3156 3.70006 14.9874C3.37187 14.6592 3.1875 14.2141 3.1875 13.75V9.375Z"/>
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M4.9375 5C4.9375 4.18777 5.26016 3.40882 5.83449 2.83449C6.40882 2.26016 7.18777 1.9375 8 1.9375C8.81223 1.9375 9.59118 2.26016 10.1655 2.83449C10.7398 3.40882 11.0625 4.18777 11.0625 5V7.625H10.1875V5C10.1875 4.41984 9.95703 3.86344 9.5468 3.4532C9.13656 3.04297 8.58016 2.8125 8 2.8125C7.41984 2.8125 6.86344 3.04297 6.4532 3.4532C6.04297 3.86344 5.8125 4.41984 5.8125 5V7.625H4.9375V5Z"/>
                        </g>
                        <defs>
                        <clipPath id="clip0_14_9791">
                        <rect width="14" height="14" transform="translate(1 1.5)"/>
                        </clipPath>
                        </defs>
                        </svg>
                        `,
                      }),
                    ],
                  }),
                  El({
                    element: 'input',
                    id: 'inputpass',
                    type: 'password',
                    className: 'bg-gray-100 w-full inputEmail font-[500]  ',
                    placeholder: 'Password',
                    eventListener: [{ event: 'input', callback: inputPasword }],
                  }),
                  El({
                    element: 'div',
                    id: 'showicon',
                    innerHTML: `<svg width="20" height="20" class="svgIconHiden" viewBox="0 0 24 24" fill="#7e7c7c" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 14.25C11.5858 14.25 11.25 14.5858 11.25 15C11.25 15.4142 11.5858 15.75 12 15.75V14.25ZM15.75 12C15.75 11.5858 15.4142 11.25 15 11.25C14.5858 11.25 14.25 11.5858 14.25 12H15.75ZM3.22067 10.1254L2.61141 9.68801L3.22067 10.1254ZM3.22045 13.8743L3.82971 13.4369L3.82971 13.4369L3.22045 13.8743ZM5.78797 16.8928L6.35092 16.3972L6.33191 16.3756L6.3113 16.3556L5.78797 16.8928ZM18.101 7L17.5824 7.54174L17.6037 7.56213L17.6265 7.58079L18.101 7ZM2.33692 12L1.58692 12L2.33692 12ZM20.7793 13.8746L21.3886 14.312V14.312L20.7793 13.8746ZM20.7793 10.1253L20.17 10.5627L20.17 10.5627L20.7793 10.1253ZM20.3953 8.39076C20.1332 8.07003 19.6607 8.02252 19.34 8.28464C19.0193 8.54676 18.9718 9.01925 19.2339 9.33998L20.3953 8.39076ZM7.93753 17.7322C7.60111 17.4905 7.13249 17.5674 6.89085 17.9038C6.64921 18.2402 6.72604 18.7088 7.06247 18.9505L7.93753 17.7322ZM21.6631 12L20.9131 12L21.6631 12ZM1.53148 19.4143C1.20803 19.6731 1.15559 20.1451 1.41435 20.4685C1.67311 20.792 2.14507 20.8444 2.46852 20.5857L1.53148 19.4143ZM22.4685 4.58565C22.792 4.32689 22.8444 3.85493 22.5857 3.53148C22.3269 3.20803 21.8549 3.15559 21.5315 3.41435L22.4685 4.58565ZM18.1747 7.06021L18.6433 7.64586L18.1747 7.06021ZM5.82765 16.9379L6.29617 17.5235L5.82765 16.9379ZM12 8.25C9.92893 8.25 8.25 9.92893 8.25 12H9.75C9.75 10.7574 10.7574 9.75 12 9.75V8.25ZM8.25 12C8.25 12.8808 8.5546 13.6925 9.06365 14.3326L10.2377 13.399C9.93209 13.0148 9.75 12.5297 9.75 12H8.25ZM14.9274 9.65611C14.2414 8.80021 13.1847 8.25 12 8.25V9.75C12.7103 9.75 13.3434 10.0782 13.7569 10.5942L14.9274 9.65611ZM12 15.75C14.0711 15.75 15.75 14.0711 15.75 12H14.25C14.25 13.2426 13.2426 14.25 12 14.25V15.75ZM12 3.25C9.85904 3.25 7.92324 4.30899 6.35173 5.59572C4.77163 6.88946 3.47961 8.47865 2.61141 9.68801L3.82992 10.5628C4.65919 9.40765 5.86348 7.93414 7.302 6.75631C8.7491 5.57146 10.3542 4.75 12 4.75V3.25ZM2.61118 14.3117C3.27304 15.2336 4.17749 16.371 5.26464 17.4301L6.3113 16.3556C5.30603 15.3763 4.45829 14.3125 3.82971 13.4369L2.61118 14.3117ZM18.6197 6.45826C16.8873 4.79958 14.5908 3.25 12 3.25V4.75C14.0028 4.75 15.9382 5.96762 17.5824 7.54174L18.6197 6.45826ZM2.61141 9.68801C2.05704 10.4602 1.58692 11.0714 1.58692 12L3.08692 12C3.08692 11.6415 3.20597 11.4319 3.82992 10.5628L2.61141 9.68801ZM3.82971 13.4369C3.20592 12.568 3.08691 12.3585 3.08692 12L1.58692 12C1.58691 12.9286 2.05693 13.5396 2.61119 14.3117L3.82971 13.4369ZM12 20.75C14.141 20.75 16.0768 19.691 17.6483 18.4043C19.2284 17.1105 20.5204 15.5214 21.3886 14.312L20.1701 13.4372C19.3408 14.5923 18.1365 16.0659 16.698 17.2437C15.2509 18.4285 13.6458 19.25 12 19.25V20.75ZM21.3885 9.68793C21.1009 9.28722 20.7682 8.84694 20.3953 8.39076L19.2339 9.33998C19.5844 9.76885 19.8981 10.1839 20.17 10.5627L21.3885 9.68793ZM7.06247 18.9505C8.487 19.9737 10.1676 20.75 12 20.75V19.25C10.5952 19.25 9.21818 18.652 7.93753 17.7322L7.06247 18.9505ZM21.3886 14.312C21.943 13.5398 22.4131 12.9286 22.4131 12L20.9131 12C20.9131 12.3585 20.794 12.5681 20.1701 13.4372L21.3886 14.312ZM20.17 10.5627C20.794 11.4319 20.9131 11.6415 20.9131 12L22.4131 12C22.4131 11.0714 21.9429 10.4602 21.3885 9.68793L20.17 10.5627ZM18.6433 7.64586L22.4685 4.58565L21.5315 3.41435L17.7062 6.47456L18.6433 7.64586ZM17.6265 7.58079L17.7002 7.64101L18.6493 6.47942L18.5756 6.41921L17.6265 7.58079ZM2.46852 20.5857L6.29617 17.5235L5.35913 16.3522L1.53148 19.4143L2.46852 20.5857ZM6.29617 17.5235L18.6433 7.64586L17.7062 6.47456L5.35913 16.3522L6.29617 17.5235ZM5.22503 17.3884L5.2647 17.4335L6.39059 16.4423L6.35092 16.3972L5.22503 17.3884Z" />
                    </svg>
                    `,
                    eventListener: [{ event: 'click', callback: showpass }],
                  }),
                ],
              }),
              El({
                element: 'div',
                className: 'text-center flex justify-center itmes-center ',
                children: [
                  El({
                    element: 'input',
                    className: 'p-2',
                    type: 'checkbox',
                    id: 'cb2',
                    name: 'vehicle1',
                  }),
                  Label('Remember me', 'p-1 '),
                ],
              }),
            ],
          }),
          El({
            element: 'button',
            className:
              'bg-[#6e7174] hover:bg-black font-semibold transition-all w-[90%] py-[12px] rounded-full text-[#fff]',
            innerText: 'Sing In',
            type: 'submit',
            eventListener: [{ event: 'click', callback: checkUser }],
          }),
        ],
      }),
    ],
  });
};

const showpass = () => {
  if (inputpass.type === 'password') {
    inputpass.type = 'text';
    showicon.innerHTML = `<svg width="20" height="20"  class="svgIconShow" viewBox="0 0 24 24" fill="#7e7c7c" xmlns="http://www.w3.org/2000/svg">
    <path d="M20.7793 13.8746L21.3886 14.312L20.7793 13.8746ZM20.7793 10.1254L20.1701 10.5628L20.7793 10.1254ZM21.6631 12H20.9131H21.6631ZM3.22067 13.8746L3.82993 13.4372L3.22067 13.8746ZM3.22067 10.1254L2.61142 9.68801L3.22067 10.1254ZM2.33691 12H1.58691H2.33691ZM2.61142 14.312C3.47962 15.5214 4.77164 17.1105 6.35173 18.4043C7.92325 19.691 9.85905 20.75 12 20.75V19.25C10.3542 19.25 8.7491 18.4285 7.302 17.2437C5.86349 16.0659 4.6592 14.5923 3.82993 13.4372L2.61142 14.312ZM12 20.75C14.141 20.75 16.0768 19.691 17.6483 18.4043C19.2284 17.1105 20.5204 15.5214 21.3886 14.312L20.1701 13.4372C19.3408 14.5923 18.1365 16.0659 16.698 17.2437C15.2509 18.4285 13.6458 19.25 12 19.25V20.75ZM21.3886 9.68801C20.5204 8.47865 19.2284 6.88946 17.6483 5.59571C16.0768 4.30899 14.141 3.25 12 3.25V4.75C13.6458 4.75 15.2509 5.57146 16.698 6.75631C18.1365 7.93414 19.3408 9.40765 20.1701 10.5628L21.3886 9.68801ZM12 3.25C9.85905 3.25 7.92325 4.30899 6.35173 5.59572C4.77164 6.88946 3.47962 8.47865 2.61142 9.68801L3.82993 10.5628C4.6592 9.40765 5.86348 7.93414 7.302 6.75631C8.7491 5.57146 10.3542 4.75 12 4.75V3.25ZM21.3886 14.312C21.943 13.5398 22.4131 12.9286 22.4131 12H20.9131C20.9131 12.3585 20.794 12.5681 20.1701 13.4372L21.3886 14.312ZM20.1701 10.5628C20.794 11.4319 20.9131 11.6415 20.9131 12H22.4131C22.4131 11.0714 21.943 10.4602 21.3886 9.68801L20.1701 10.5628ZM3.82993 13.4372C3.20597 12.5681 3.08691 12.3585 3.08691 12H1.58691C1.58691 12.9286 2.05703 13.5398 2.61142 14.312L3.82993 13.4372ZM2.61142 9.68801C2.05703 10.4602 1.58691 11.0714 1.58691 12H3.08691C3.08691 11.6415 3.20597 11.4319 3.82993 10.5628L2.61142 9.68801ZM8.25001 12C8.25001 14.0711 9.92894 15.75 12 15.75V14.25C10.7574 14.25 9.75001 13.2426 9.75001 12H8.25001ZM12 15.75C14.0711 15.75 15.75 14.0711 15.75 12H14.25C14.25 13.2426 13.2426 14.25 12 14.25V15.75ZM15.75 12C15.75 9.92893 14.0711 8.25 12 8.25V9.75C13.2426 9.75 14.25 10.7574 14.25 12H15.75ZM12 8.25C9.92894 8.25 8.25001 9.92893 8.25001 12H9.75001C9.75001 10.7574 10.7574 9.75 12 9.75V8.25Z"/>
    </svg>
    
    `;
  } else {
    inputpass.type = 'password';
    showicon.innerHTML = `<svg width="20" height="20" viewBox="0 0 24 24" fill="#7e7c7c" class="svgIconHiden" xmlns="http://www.w3.org/2000/svg">
    <path d="M12 14.25C11.5858 14.25 11.25 14.5858 11.25 15C11.25 15.4142 11.5858 15.75 12 15.75V14.25ZM15.75 12C15.75 11.5858 15.4142 11.25 15 11.25C14.5858 11.25 14.25 11.5858 14.25 12H15.75ZM3.22067 10.1254L2.61141 9.68801L3.22067 10.1254ZM3.22045 13.8743L3.82971 13.4369L3.82971 13.4369L3.22045 13.8743ZM5.78797 16.8928L6.35092 16.3972L6.33191 16.3756L6.3113 16.3556L5.78797 16.8928ZM18.101 7L17.5824 7.54174L17.6037 7.56213L17.6265 7.58079L18.101 7ZM2.33692 12L1.58692 12L2.33692 12ZM20.7793 13.8746L21.3886 14.312V14.312L20.7793 13.8746ZM20.7793 10.1253L20.17 10.5627L20.17 10.5627L20.7793 10.1253ZM20.3953 8.39076C20.1332 8.07003 19.6607 8.02252 19.34 8.28464C19.0193 8.54676 18.9718 9.01925 19.2339 9.33998L20.3953 8.39076ZM7.93753 17.7322C7.60111 17.4905 7.13249 17.5674 6.89085 17.9038C6.64921 18.2402 6.72604 18.7088 7.06247 18.9505L7.93753 17.7322ZM21.6631 12L20.9131 12L21.6631 12ZM1.53148 19.4143C1.20803 19.6731 1.15559 20.1451 1.41435 20.4685C1.67311 20.792 2.14507 20.8444 2.46852 20.5857L1.53148 19.4143ZM22.4685 4.58565C22.792 4.32689 22.8444 3.85493 22.5857 3.53148C22.3269 3.20803 21.8549 3.15559 21.5315 3.41435L22.4685 4.58565ZM18.1747 7.06021L18.6433 7.64586L18.1747 7.06021ZM5.82765 16.9379L6.29617 17.5235L5.82765 16.9379ZM12 8.25C9.92893 8.25 8.25 9.92893 8.25 12H9.75C9.75 10.7574 10.7574 9.75 12 9.75V8.25ZM8.25 12C8.25 12.8808 8.5546 13.6925 9.06365 14.3326L10.2377 13.399C9.93209 13.0148 9.75 12.5297 9.75 12H8.25ZM14.9274 9.65611C14.2414 8.80021 13.1847 8.25 12 8.25V9.75C12.7103 9.75 13.3434 10.0782 13.7569 10.5942L14.9274 9.65611ZM12 15.75C14.0711 15.75 15.75 14.0711 15.75 12H14.25C14.25 13.2426 13.2426 14.25 12 14.25V15.75ZM12 3.25C9.85904 3.25 7.92324 4.30899 6.35173 5.59572C4.77163 6.88946 3.47961 8.47865 2.61141 9.68801L3.82992 10.5628C4.65919 9.40765 5.86348 7.93414 7.302 6.75631C8.7491 5.57146 10.3542 4.75 12 4.75V3.25ZM2.61118 14.3117C3.27304 15.2336 4.17749 16.371 5.26464 17.4301L6.3113 16.3556C5.30603 15.3763 4.45829 14.3125 3.82971 13.4369L2.61118 14.3117ZM18.6197 6.45826C16.8873 4.79958 14.5908 3.25 12 3.25V4.75C14.0028 4.75 15.9382 5.96762 17.5824 7.54174L18.6197 6.45826ZM2.61141 9.68801C2.05704 10.4602 1.58692 11.0714 1.58692 12L3.08692 12C3.08692 11.6415 3.20597 11.4319 3.82992 10.5628L2.61141 9.68801ZM3.82971 13.4369C3.20592 12.568 3.08691 12.3585 3.08692 12L1.58692 12C1.58691 12.9286 2.05693 13.5396 2.61119 14.3117L3.82971 13.4369ZM12 20.75C14.141 20.75 16.0768 19.691 17.6483 18.4043C19.2284 17.1105 20.5204 15.5214 21.3886 14.312L20.1701 13.4372C19.3408 14.5923 18.1365 16.0659 16.698 17.2437C15.2509 18.4285 13.6458 19.25 12 19.25V20.75ZM21.3885 9.68793C21.1009 9.28722 20.7682 8.84694 20.3953 8.39076L19.2339 9.33998C19.5844 9.76885 19.8981 10.1839 20.17 10.5627L21.3885 9.68793ZM7.06247 18.9505C8.487 19.9737 10.1676 20.75 12 20.75V19.25C10.5952 19.25 9.21818 18.652 7.93753 17.7322L7.06247 18.9505ZM21.3886 14.312C21.943 13.5398 22.4131 12.9286 22.4131 12L20.9131 12C20.9131 12.3585 20.794 12.5681 20.1701 13.4372L21.3886 14.312ZM20.17 10.5627C20.794 11.4319 20.9131 11.6415 20.9131 12L22.4131 12C22.4131 11.0714 21.9429 10.4602 21.3885 9.68793L20.17 10.5627ZM18.6433 7.64586L22.4685 4.58565L21.5315 3.41435L17.7062 6.47456L18.6433 7.64586ZM17.6265 7.58079L17.7002 7.64101L18.6493 6.47942L18.5756 6.41921L17.6265 7.58079ZM2.46852 20.5857L6.29617 17.5235L5.35913 16.3522L1.53148 19.4143L2.46852 20.5857ZM6.29617 17.5235L18.6433 7.64586L17.7062 6.47456L5.35913 16.3522L6.29617 17.5235ZM5.22503 17.3884L5.2647 17.4335L6.39059 16.4423L6.35092 16.3972L5.22503 17.3884Z" />
    </svg>
    `;
  }
};

const inputPasword = () => {
  const iconLock = document.querySelector('.iconLock');
  const svgIconHiden = document.querySelector('.svgIconHiden');
  const svgIconShow = document.querySelector('.svgIconShow');
  console.log(svgIconShow);
  if (inputpass.value == '') {
    iconLock.setAttribute('fill', ' #7e7c7c');
    svgIconHiden.setAttribute('fill', ' #7e7c7c');
  } else {
    iconLock.setAttribute('fill', 'bg-gray-400');
    svgIconHiden.setAttribute('fill', 'bg-gray-400');
  }
};

const inputEmail = () => {
  const input = document.querySelector('.inputEmail');
  const icon = document.querySelector('.iconEmailInput');
  const iconpath = document.querySelector('.iconpath');

  if (input.value === '') {
    icon.setAttribute('fill', '#6C757D');
    //icon.classList.remove("bg-gray-2")
  } else
    iconpath.removeAttribute('fill'), icon.setAttribute('fill', 'bg-gray-400');
};

const dataUser = await GetUser();
const checkUser = () => {
  const inputEmail = document.getElementById('inputEmail');
  const inputpass = document.getElementById('inputpass');

  dataUser.map((items) => {
    if (items.email == inputEmail.value && items.password == inputpass.value) {
     Router().navigate('/getstart');
    }
    inputEmail.value == ''
      ? (inputEmail.classList.add('bg-red-400'),
        inputEmail.classList.remove('bg-green-400'))
      : items.email != inputEmail.value
      ? (inputEmail.classList.add('bg-red-400'),
        inputEmail.classList.remove('bg-green-400'))
      : items.email == inputEmail.value
      ? (inputEmail.classList.remove('bg-red-400'),
        inputEmail.classList.add('bg-green-400'))
      : '';
      inputpass.value == ''
      ? (inputpass.classList.add('bg-red-400'),
      inputpass.classList.remove('bg-green-400'))
      : items.password != inputpass.value
      ? (inputpass.classList.add('bg-red-400'),
      inputpass.classList.remove('bg-green-400'))
      : items.password == inputpass.value
      ? (inputpass.classList.remove('bg-red-400'),
      inputpass.classList.add('bg-green-400'))
      : '';
  });
};
